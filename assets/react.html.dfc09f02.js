import{c as n}from"./app.6b3eabdf.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},t=n(`<h1 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h1><h2 id="\u4F7F\u7528-hooks-api" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-hooks-api" aria-hidden="true">#</a> \u4F7F\u7528 Hooks API</h2><h3 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate" aria-hidden="true">#</a> useState</h3><p><code>useState</code> \u7528\u4E8E\u5728\u7EC4\u4EF6\u4E2D\u4FDD\u5B58\u72B6\u6001\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5206\u522B\u662F\u5F53\u524D <code>state</code> \u548C \u6539\u53D8 <code>state</code> \u7684\u65B9\u6CD5\uFF0C\u8C03\u7528 <code>setState</code> \u540E\uFF0C\u7EC4\u4EF6\u4F1A\u91CD\u65B0\u6E32\u67D3\u3002</p><p>\u4E0E <code>class</code> \u7EC4\u4EF6\u7684 <code>this.setState</code> \u4E0D\u540C\uFF0C<code>useState</code> \u8FD4\u56DE\u7684 <code>setState</code> \u65B9\u6CD5\u4E0D\u4F1A\u5408\u5E76\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// state \u4F1A\u53D8\u6210 { a: 2 } \u800C\u4E0D\u662F { a: 2, b: 2 }</span>
</code></pre></div><h3 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h3><p><code>useEffect</code> \u4F1A\u5728\u6D4F\u89C8\u5668\u6E32\u67D3\u7ED3\u675F\u540E\u8FD0\u884C\uFF0C\u901A\u5E38\u7528\u4E8E\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u4F8B\u5982\u5F02\u6B65\u83B7\u53D6\u6570\u636E\u3001\u6539\u53D8 DOM \u7B49\u3002</p><p>\u5728\u4F9D\u8D56\u9879\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u4F1A\u5148\u6267\u884C\u6D88\u9664\u526F\u4F5C\u7528\u7684\u51FD\u6570\uFF0C\u518D\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u7528\u4E8E\u6D88\u9664\u526F\u4F5C\u7528\u7684\u51FD\u6570\uFF1B</p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6570\u7EC4\uFF0C\u91CC\u9762\u662F <code>useEffect</code> \u7684\u4F9D\u8D56\u9879\uFF0C\u5F53\u4F9D\u8D56\u9879\u53D1\u751F\u6539\u53D8\u65F6\uFF0C<code>useEffect</code> \u4E2D\u7684\u526F\u4F5C\u7528\u51FD\u6570\u4F1A\u518D\u6B21\u8FD0\u884C\u3002</p><blockquote><p>\u53EF\u4EE5\u5728\u4E00\u4E2A\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u591A\u4E2A <code>useEffect</code> \u65B9\u6CD5\u3002</p></blockquote><h3 id="uselayouteffect" tabindex="-1"><a class="header-anchor" href="#uselayouteffect" aria-hidden="true">#</a> useLayoutEffect</h3><p><code>useLayoutEffect</code> \u5728\u6D4F\u89C8\u5668\u6E32\u67D3\u7ED3\u675F\u524D\u6267\u884C\uFF0C\u5176\u4F59\u4E0E <code>useEffect</code> \u76F8\u540C\u3002</p><h3 id="usecontext" tabindex="-1"><a class="header-anchor" href="#usecontext" aria-hidden="true">#</a> useContext</h3><p>\u7528\u6765\u4FDD\u5B58\u5E94\u7528\u7684\u5168\u5C40\u6570\u636E\uFF0C\u6216\u8005\u907F\u514D\u5728\u5D4C\u5957\u7EC4\u4EF6\u4E2D\u591A\u6B21\u4F20\u9012 <code>props</code>\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> CountContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5199\u5728\u5916\u90E8\uFF0C\u53EF\u4EE5\u88AB\u5916\u754C\u7EC4\u4EF6\u5F15\u5165</span>

<span class="token keyword">const</span> <span class="token function-variable function">Parent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F7F\u7528 state \u63A7\u5236 Context \u7684\u503C</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>CountContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>Child <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span>count  <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>click<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>CountContext<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">Child</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>CountContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>count <span class="token operator">=</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>\u4F7F\u7528\u4E86 <code>useContext</code> \u7684\u7EC4\u4EF6\u5728 <code>Context</code> \u66F4\u65B0\u65F6\u4F1A\u5F3A\u5236\u91CD\u65B0\u6E32\u67D3\uFF0C\u65E0\u89C6 <code>React.memo</code>\u3002</p></blockquote><blockquote><p>\u8981\u907F\u514D\u8FD9\u4E2A\u95EE\u9898\uFF0C\u53EF\u4EE5\u5728\u4F7F\u7528 <code>useContext</code> \u7684\u7EC4\u4EF6\u4E0A\u9762\u5305\u4E00\u5C42\u7236\u7EC4\u4EF6\uFF0C\u7531\u7236\u7EC4\u4EF6\u4F7F\u7528 <code>props</code> \u4F20\u9012 <code>Context</code> \u7684\u503C\u3002</p></blockquote><h3 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback" aria-hidden="true">#</a> useCallback</h3><p>\u7528\u4E8E\u4FDD\u5B58\u5DF2\u5B9A\u4E49\u51FD\u6570\u7684\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u91CD\u65B0\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> handleClick <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u7528\u4E8E\u6267\u884C\u7684\u51FD\u6570\uFF1B</p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6570\u7EC4\uFF0C\u91CC\u9762\u662F <code>useCallback</code> \u7684\u4F9D\u8D56\u9879\uFF0C\u4F9D\u8D56\u9879\u6CA1\u6709\u53D1\u751F\u6539\u53D8\u65F6\uFF0C<code>handleClick</code> \u603B\u662F\u6307\u5411\u540C\u4E00\u4E2A\u51FD\u6570\u3002</p><h3 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo" aria-hidden="true">#</a> useMemo</h3><p>\u7528\u4E8E\u4FDD\u5B58\u53D8\u91CF\u7684\u503C\uFF0C\u907F\u514D\u91CD\u590D\u8FDB\u884C\u7E41\u91CD\u7684\u8BA1\u7B97\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7E41\u91CD\u7684\u8BA1\u7B97</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u7528\u4E8E\u6267\u884C\u7684\u51FD\u6570\uFF1B</p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6570\u7EC4\uFF0C\u91CC\u9762\u662F <code>useMemo</code> \u7684\u4F9D\u8D56\u9879\uFF0C\u4F9D\u8D56\u9879\u6CA1\u6709\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E4B\u524D\u7684\u8BA1\u7B97\u7ED3\u679C\uFF0C\u4E0D\u4F1A\u518D\u6B21\u6267\u884C\u51FD\u6570\u3002</p><h3 id="useref" tabindex="-1"><a class="header-anchor" href="#useref" aria-hidden="true">#</a> useRef</h3><p>\u4FDD\u5B58\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u53EF\u4EE5\u7528\u4E8E\u64CD\u4F5C\u771F\u5B9E DOM \u7B49\u3002</p><p>\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> divRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span>divRef<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8981\u83B7\u53D6\u51FD\u6570\u7EC4\u4EF6\u7684 <code>ref</code> \u65F6\uFF0C\u9700\u8981\u7ED3\u5408 <code>React.forwardRef</code> \u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Parent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> childRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> div <span class="token operator">=</span> childRef<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>classList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// child</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Child ref<span class="token operator">=</span><span class="token punctuation">{</span>childRef<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Child <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;child&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="usereducer" tabindex="-1"><a class="header-anchor" href="#usereducer" aria-hidden="true">#</a> useReducer</h3><p>\u6BD4\u8F83\u5C11\u7528\uFF0C\u4EE5\u540E\u518D\u8865\u5145\u3002</p><h3 id="useimperativehandle" tabindex="-1"><a class="header-anchor" href="#useimperativehandle" aria-hidden="true">#</a> useImperativeHandle</h3><p>\u6CA1\u7528\u8FC7\uFF0C\u4EE5\u540E\u518D\u8865\u5145\u3002</p><h3 id="usedebugvalue" tabindex="-1"><a class="header-anchor" href="#usedebugvalue" aria-hidden="true">#</a> useDebugValue</h3><p>\u6CA1\u7528\u8FC7\uFF0C\u4EE5\u540E\u518D\u8865\u5145\u3002</p><h2 id="\u81EA\u5B9A\u4E49-hook" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49-hook" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49 Hook</h2><h3 id="usesetstate" tabindex="-1"><a class="header-anchor" href="#usesetstate" aria-hidden="true">#</a> useSetState</h3><p>\u7531\u4E8E\u5B98\u65B9 API <code>useState</code> \u4E0D\u4F1A\u5408\u5E76\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5199\u4E00\u4E2A\u652F\u6301\u5408\u5E76\u5BF9\u8C61\u7684 <code>useSetState</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49</span>
<span class="token keyword">const</span> <span class="token function-variable function">useSetState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">initialState <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> saveState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> setState <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">saveState</span><span class="token punctuation">(</span><span class="token parameter">prevState</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>prevState<span class="token punctuation">,</span> <span class="token operator">...</span>newState <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useSetState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// state \u53D8\u4E3A { a: 2, b: 2}</span>
</code></pre></div><h3 id="useinterval" tabindex="-1"><a class="header-anchor" href="#useinterval" aria-hidden="true">#</a> useInterval</h3><p>\u5C06 <code>setInterval</code> \u8FDB\u884C\u5305\u88C5\uFF0C\u81EA\u52A8\u6E05\u9664\u65E7\u7684\u5B9A\u65F6\u5668\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7 <code>state</code> \u6765\u5F00\u59CB\u3001\u6682\u505C\u5B9A\u65F6\u5668\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49</span>
<span class="token keyword">const</span> <span class="token function-variable function">useInterval</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> savedCallback <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4FDD\u5B58\u65B0\u56DE\u8C03</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        savedCallback<span class="token punctuation">.</span>current <span class="token operator">=</span> callback<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5EFA\u7ACB interval</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            savedCallback<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>delay<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>isRunning<span class="token punctuation">,</span> setIsRunning<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9A\u65F6\u5668\u542F\u52A8</span>
<span class="token function">useInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isRunning <span class="token operator">?</span> <span class="token number">1000</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6682\u505C\u5B9A\u65F6\u5668</span>
<span class="token function">setIsRunning</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="react-redux" tabindex="-1"><a class="header-anchor" href="#react-redux" aria-hidden="true">#</a> React-Redux</h2><blockquote><p>\u597D\u4E45\u6CA1\u7528\u4E86\uFF0C\u628A\u5E38\u7528\u7684 API \u6284\u4E0B\u6765\uFF0C\u65B9\u4FBF\u4EE5\u540E\u8981\u7528\u7684\u65F6\u5019\u5FEB\u901F\u638C\u63E1\u3002</p></blockquote><h3 id="\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840" aria-hidden="true">#</a> \u57FA\u7840</h3><ul><li>store: \u4FDD\u5B58\u6570\u636E\u7684\u5BB9\u5668\uFF0C\u6709\u4EE5\u4E0B API\uFF1A <ul><li>getState(): \u83B7\u53D6\u5F53\u524D <code>state</code></li><li>dispatch(action): \u53D1\u51FA <code>action</code></li><li>subscribe(listener): \u8BA2\u9605 <code>store</code> \u7684\u53D8\u5316\uFF0C\u8FD4\u56DE\u53D6\u6D88\u8BE5\u8BA2\u9605\u7684\u51FD\u6570\u3002\u6BCF\u6B21 <code>dispatch(action)</code> \u5C06\u8FD0\u884C\u4E00\u6B21 <code>listener</code> \u51FD\u6570</li><li>replaceReducer(nextReducer): \u7528 <code>nextReducer</code> \u66FF\u6362\u5F53\u524D\u7684 <code>reducer</code></li></ul></li><li>state: <code>store</code> \u4E2D\u4FDD\u5B58\u7684\u6570\u636E</li><li>action: \u901A\u77E5 <code>state</code> \u6539\u53D8\uFF0C\u5E26\u6709 <code>type</code> \u5B57\u6BB5\u7684\u666E\u901A JS \u5BF9\u8C61</li><li>reducer <code>(state: S, action: A) =&gt; S</code>: \u63A5\u6536\u5F53\u524D <code>state</code> \u548C <code>action</code>\uFF0C\u6839\u636E <code>action</code> \u6765\u8FD4\u56DE\u4E0B\u4E00\u4E2A <code>state</code></li><li>dispatch: \u53D1\u51FA <code>action</code>\uFF0C\u8C03\u7528\u65B9\u5F0F\uFF1A <ul><li><code>dispatch({ type: &#39;ACTION_NAME&#39; })</code></li><li><code>dispatch(fn())</code> \u8FD9\u91CC <code>fn</code> \u4E3A\u751F\u6210 <code>action</code> \u7684\u51FD\u6570</li></ul></li></ul><h3 id="createstore-redux" tabindex="-1"><a class="header-anchor" href="#createstore-redux" aria-hidden="true">#</a> createStore (redux)</h3><p>\u521B\u5EFA <code>store</code> \u7684\u51FD\u6570\u3002</p><p><code>createStore(reducer, preloadedState?, enhancer?)</code></p><ul><li>reducer</li><li>preloadedState: \u521D\u59CB\u72B6\u6001</li><li>enhancer: \u4E2D\u95F4\u4EF6 <code>applyMiddleware(...middleware)</code></li></ul><h3 id="combinereducers-redux" tabindex="-1"><a class="header-anchor" href="#combinereducers-redux" aria-hidden="true">#</a> combineReducers (redux)</h3><p>\u5408\u5E76\u591A\u4E2A <code>reducer</code>\uFF0C\u8FD4\u56DE\u5408\u5E76\u540E\u7684 <code>reducer</code>\u3002</p><p><code>combineReducers(reducers)</code></p><ul><li>reducers: \u5BF9\u8C61\uFF0C\u5404\u5C5E\u6027\u7684\u503C\u4E3A <code>reducer</code></li></ul><p>\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;A&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span> 
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;B&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span> 
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5408\u5E76 reducer</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u521B\u5EFA store</span>
store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { a: 0, b: 0 }</span>

store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u53D1\u9001 action</span>
store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { a: 1, b: 0 }</span>
</code></pre></div><h3 id="provider-react-redux" tabindex="-1"><a class="header-anchor" href="#provider-react-redux" aria-hidden="true">#</a> Provider (react-redux)</h3><p>\u4F20\u9012 <code>store</code>\u3002</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="connect-react-redux" tabindex="-1"><a class="header-anchor" href="#connect-react-redux" aria-hidden="true">#</a> connect (react-redux)</h3><p>\u5C06\u7EC4\u4EF6\u4E0E <code>store</code> \u5173\u8054\u8D77\u6765\uFF0C\u8FD4\u56DE\u5173\u8054\u540E\u7684\u7EC4\u4EF6\u3002</p><p><code>connect(mapStateToProps?, mapDispatchToProps?, mergeProps?, options?)</code></p><ul><li>mapStateToProps <code>(state, ownProps?) =&gt; Object</code>: \u5C06 <code>state</code> \u4E2D\u7684\u67D0\u4E9B\u503C\u6620\u5C04\u5230\u7EC4\u4EF6\u7684 <code>props</code></li><li>mapDispatchToProps <code>Object | (dispatch, ownProps?) =&gt; Object</code>: \u5305\u88C5 <code>dispatch</code>\uFF0C\u6620\u5C04\u5230\u7EC4\u4EF6\u7684 <code>props</code></li><li>mergeProps <code>(stateProps, dispatchProps, ownProps) =&gt; props</code>: \u5C06 <code>mapStateToProps</code> \u548C <code>mapDispatchToProps</code> \u63D0\u4F9B\u7684 <code>props</code> \u8FDB\u884C\u5305\u88C5\uFF0C\u8FD4\u56DE\u7EC4\u4EF6\u6700\u7EC8\u4F1A\u6536\u5230\u7684 <code>props</code></li><li>options <code>Object</code>: \u597D\u50CF\u6BD4\u8F83\u5C11\u7528</li></ul><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token comment">//  index.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;./Counter&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;ADD&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token comment">//  Counter/index.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Counter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> count<span class="token punctuation">,</span> <span class="token literal-property property">onClick</span><span class="token operator">:</span> handleClick <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">count: </span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> ownProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> state 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dispatch<span class="token punctuation">,</span> ownProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="dvajs" tabindex="-1"><a class="header-anchor" href="#dvajs" aria-hidden="true">#</a> DvaJS</h2><h3 id="\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7528\u6CD5" aria-hidden="true">#</a> \u7528\u6CD5</h3><p>\u521B\u5EFA\u4E00\u4E2A Dva \u5E94\u7528\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> UIComponent <span class="token keyword">from</span> <span class="token string">&#39;./UIComponent&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F7F\u7528\u8FC7 connect \u7684\u7EC4\u4EF6</span>
<span class="token keyword">import</span> dva<span class="token punctuation">,</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;dva&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">dva</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> modelObject <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reducers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> state <span class="token operator">+</span> action<span class="token punctuation">.</span>payload<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">effects</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token operator">*</span><span class="token function">asyncAdd5</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> <span class="token punctuation">{</span> call <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> five <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">yield</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> five <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>modelObject<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6CE8\u518C model</span>

app<span class="token punctuation">.</span><span class="token function">router</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">history<span class="token punctuation">,</span> app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>UIComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8DEF\u7531</span>

app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6302\u8F7D\u5230 id = root \u7684 DOM \u5143\u7D20\u4E2D</span>
</code></pre></div><h3 id="model-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#model-\u5BF9\u8C61" aria-hidden="true">#</a> model \u5BF9\u8C61</h3><p>Dva \u662F\u901A\u8FC7 <code>model</code> \u6765\u7BA1\u7406\u72B6\u6001\u7684\uFF0C<code>model</code> \u7684\u4E00\u4E9B\u914D\u7F6E\uFF1A</p><ul><li>namespace: <code>model</code> \u7684\u547D\u540D\u7A7A\u95F4\uFF0C\u540C\u65F6\u4E5F\u662F\u5168\u5C40 <code>state</code> \u4E0A\u7684\u5C5E\u6027</li><li>state: \u521D\u59CB\u503C\uFF0C\u4F18\u5148\u7EA7\u4F4E\u4E8E\u4F20\u7ED9<code> dva(options)</code> \u7684 <code>options.initialState</code></li><li>reducers <code>(state, action) =&gt; newState</code>: \u6839\u636E <code>action</code> \u6765\u8FD4\u56DE\u65B0\u7684 <code>state</code></li><li>effects <code>*(action, effects) =&gt; void</code>: generator \u51FD\u6570\uFF0C\u5904\u7406\u5F02\u6B65\u64CD\u4F5C\u548C\u4E1A\u52A1\u903B\u8F91\uFF0C\u4E0D\u76F4\u63A5\u4FEE\u6539 <code>state</code><ul><li><code>effects.put(action)</code>: \u53D1\u51FA <code>action</code></li><li><code>effects.call(fn, params)</code>: \u8C03\u7528\u5F02\u6B65\u51FD\u6570 <code>fn(params)</code>\uFF0C\u53D6\u5F97\u51FD\u6570\u8FD4\u56DE\u503C</li><li><code>effects.select(fn = (state) =&gt; any)</code>: \u8C03\u7528\u51FD\u6570\uFF0C\u53D6\u5F97\u51FD\u6570\u8FD4\u56DE\u503C\u3002<code>fn</code> \u63A5\u6536\u5F53\u524D\u5168\u5C40 <code>state</code></li></ul></li><li>subscriptions: \u7528\u4E8E\u8BA2\u9605\u4E00\u4E2A\u6570\u636E\u6E90\uFF0C\u7136\u540E\u6839\u636E\u9700\u8981 <code>dispatch</code> \u76F8\u5E94\u7684 <code>action</code>\uFF0C\u6682\u65F6\u6CA1\u7528\u8FC7</li></ul><h2 id="next-js" tabindex="-1"><a class="header-anchor" href="#next-js" aria-hidden="true">#</a> Next.js</h2><h3 id="\u5B89\u88C5\u4E0E\u8FD0\u884C" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u4E0E\u8FD0\u884C" aria-hidden="true">#</a> \u5B89\u88C5\u4E0E\u8FD0\u884C</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>npx create-next-app my-next-app
<span class="token builtin class-name">cd</span> my-next-app
<span class="token function">npm</span> run dev
</code></pre></div><h4 id="\u53EF\u80FD\u7684\u7F16\u8BD1\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u53EF\u80FD\u7684\u7F16\u8BD1\u95EE\u9898" aria-hidden="true">#</a> \u53EF\u80FD\u7684\u7F16\u8BD1\u95EE\u9898</h4><p>\u76EE\u524D\u6700\u65B0\u7248 Next.js \u4F7F\u7528 Webpack5\uFF0C\u7F16\u8BD1\u65F6\u53EF\u80FD\u4F1A\u51FA\u73B0\u95EE\u9898\uFF0C\u53EF\u4EE5\u5728\u9879\u76EE\u6839\u76EE\u5F55\u6DFB\u52A0 <code>next.config.js</code> \u6587\u4EF6\u5E76\u586B\u5199\u4EE5\u4E0B\u5185\u5BB9\u6765\u542F\u7528 Webpack4\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">webpack5</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u542F\u7528-typescript" tabindex="-1"><a class="header-anchor" href="#\u542F\u7528-typescript" aria-hidden="true">#</a> \u542F\u7528 TypeScript</h4><p>\u5B89\u88C5\u65F6\u8F93\u5165 <code>--ts</code> \u9009\u9879\uFF1A</p><div class="language-bash ext-sh"><pre class="language-bash"><code>npx create-next-app --ts my-next-app
</code></pre></div><h3 id="\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u7531" aria-hidden="true">#</a> \u8DEF\u7531</h3><h4 id="\u9759\u6001\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u8DEF\u7531" aria-hidden="true">#</a> \u9759\u6001\u8DEF\u7531</h4><p>\u5728 pages \u76EE\u5F55\u4E0B\u6DFB\u52A0\u5BF9\u5E94\u6587\u4EF6\u5373\u53EF\u3002</p><ul><li><code>/pages/index.js</code> \u6587\u4EF6\u5BF9\u5E94\u5730\u5740\u4E3A <code>/</code>\uFF0C</li><li><code>/pages/login/index.js</code> \u6587\u4EF6\u5BF9\u5E94\u5730\u5740\u4E3A <code>/login</code></li><li><code>/pages/login/one.js</code> \u6587\u4EF6\u5BF9\u5E94\u5730\u5740\u4E3A <code>/login/one</code></li></ul><h4 id="\u52A8\u6001\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u8DEF\u7531" aria-hidden="true">#</a> \u52A8\u6001\u8DEF\u7531</h4><p>\u5728 pages \u76EE\u5F55\u4E0B\u6DFB\u52A0\u4EE5 <code>[]</code> \u5305\u88F9\u7684\u6587\u4EF6\u5373\u53EF\u3002</p><ul><li><code>/pages/[id].js</code> \u6587\u4EF6\u5BF9\u5E94\u5730\u5740\u4E3A <code>/&lt;id&gt;</code></li><li><code>/pages/posts/[id].js</code> \u6587\u4EF6\u5BF9\u5E94\u5730\u5740\u4E3A <code>/posts/&lt;id&gt;</code></li></ul><h4 id="getstaticpaths-\u9759\u6001\u751F\u6210" tabindex="-1"><a class="header-anchor" href="#getstaticpaths-\u9759\u6001\u751F\u6210" aria-hidden="true">#</a> getStaticPaths (\u9759\u6001\u751F\u6210)</h4><p>\u52A8\u6001\u8DEF\u7531\u4F7F\u7528\uFF0C\u8FD4\u56DE\u8BE5\u9875\u9762\u7EC4\u4EF6\u5339\u914D\u7684\u8DEF\u5F84\u3002</p><p>\u5FC5\u987B\u7ED3\u5408 <code>getStaticProps</code> \u4F7F\u7528\uFF0C\u5426\u5219\u62A5\u9519\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStaticPaths</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BED\u8A00\u8BBE\u7F6E</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> locales<span class="token punctuation">,</span> defaultLocale <span class="token punctuation">}</span> <span class="token operator">=</span> context<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u54EA\u4E9B\u8DEF\u5F84\u4F1A\u88AB\u9884\u6E32\u67D3</span>
        <span class="token comment">// \u5047\u8BBE\u9875\u9762\u6587\u4EF6\u4E3A pages/posts/[id].js </span>
        <span class="token comment">// next \u4F1A\u9759\u6001\u751F\u6210 /posts/1 \u548C /posts/2 \u4E24\u4E2A\u9875\u9762</span>
        <span class="token literal-property property">paths</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// fallback \u4E3A false\uFF0C\u4E0D\u5728 paths \u5217\u8868\u4E2D\u7684\u9875\u9762\u4F1A\u8FD4\u56DE 404</span>
        <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token comment">// fallback \u4E3A true</span>
        <span class="token comment">// \u5728\u6784\u5EFA\u671F\u95F4\uFF0Cpaths \u5305\u542B\u7684\u8DEF\u5F84\u4F1A\u88AB\u9700\u6E32\u67D3</span>
        <span class="token comment">// \u672A\u5305\u542B\u7684\u8DEF\u5F84\u5728\u7B2C\u4E00\u6B21\u88AB\u8BBF\u95EE\u65F6\uFF0C\u4F1A\u63D0\u4F9B\u4E00\u4E2A fallback \u7248\u672C</span>
        <span class="token comment">// \u9875\u9762\u7EC4\u4EF6\u53EF\u4F7F\u7528 useRouter().isFallback \u4E2D\u5224\u65AD\u662F\u5426\u4E3A fallback \u7248\u672C</span>
        <span class="token comment">// \u53EF\u4E3A fallback \u7248\u672C\u63D0\u4F9B\u4E00\u4E2A Loadding \u72B6\u6001</span>
        <span class="token comment">// \u5F53 getStaticProps \u5904\u7406 fallback \u5B8C\u6BD5\u65F6\uFF0C\u9875\u9762\u7EC4\u4EF6\u6536\u5230\u7684 isFallback \u4F1A\u53D8\u4E3A false</span>
        <span class="token comment">// fallback \u7248\u672C\u88AB\u6E32\u67D3\u5B8C\u6210\u65F6\uFF0C\u4F1A\u88AB\u52A0\u5165\u5230\u5DF2\u9884\u6E32\u67D3\u7684\u9875\u9762\u5217\u8868\u4E2D</span>
        <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token comment">// fallback \u4E3A &#39;blocking&#39;</span>
        <span class="token comment">// \u5728\u6784\u5EFA\u671F\u95F4\uFF0Cpaths \u5305\u542B\u7684\u8DEF\u5F84\u4F1A\u88AB\u9700\u6E32\u67D3</span>
        <span class="token comment">// \u672A\u5305\u542B\u7684\u8DEF\u5F84\u5728\u7B2C\u4E00\u6B21\u88AB\u8BBF\u95EE\u65F6\uFF0C\u4F1A\u7B49\u5F85 getStaticProps \u8FD4\u56DE Props</span>
        <span class="token comment">// \u671F\u95F4\u9875\u9762\u7EC4\u4EF6\u4E0D\u4F1A\u88AB\u5448\u73B0</span>
        <span class="token comment">// \u4E0E fallback \u4E3A true \u7C7B\u4F3C\uFF0C\u4E0D\u8FC7\u9875\u9762\u7EC4\u4EF6\u4E0D\u4F1A\u6709 fallback \u72B6\u6001</span>
        <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token string">&#39;blocking&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6837\u5F0F" aria-hidden="true">#</a> \u6837\u5F0F</h3><h4 id="\u5168\u5C40\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u6837\u5F0F" aria-hidden="true">#</a> \u5168\u5C40\u6837\u5F0F</h4><p>\u5728 pages \u76EE\u5F55\u4E0B\u6DFB\u52A0\u6587\u4EF6 <code>_app.js</code>\uFF0C\u5F15\u5165\u5168\u5C40\u6837\u5F0F\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;../styles/global.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u5F00\u542F-css-\u6A21\u5757\u5316" tabindex="-1"><a class="header-anchor" href="#\u5F00\u542F-css-\u6A21\u5757\u5316" aria-hidden="true">#</a> \u5F00\u542F CSS \u6A21\u5757\u5316</h4><p>\u6837\u5F0F\u6587\u4EF6\u4EE5 <code>.module.css</code> \u548C <code>.module.scss</code> \u7ED3\u5C3E\u5373\u53EF\u3002</p><h3 id="next-\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#next-\u7EC4\u4EF6" aria-hidden="true">#</a> Next \u7EC4\u4EF6</h3><h4 id="head" tabindex="-1"><a class="header-anchor" href="#head" aria-hidden="true">#</a> Head</h4><p>\u7C7B\u4F3C <code>head</code> \u6807\u7B7E\uFF0C\u7EC4\u4EF6\u5185 <code>key</code> \u76F8\u540C\u7684\u6807\u7B7E\u5C06\u4F1A\u5408\u5E76\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> Head <span class="token keyword">from</span> <span class="token string">&#39;next/head&#39;</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>Head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>My Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token comment">/* \u8FD9\u4E24\u4E2A meta \u4F1A\u5408\u5E76\uFF0C\u53EA\u51FA\u73B0 content \u4E3A title2 \u7684\u6807\u7B7E */</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span>meta property<span class="token operator">=</span><span class="token string">&quot;og:title&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;title1&quot;</span> key<span class="token operator">=</span><span class="token string">&quot;title&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>meta property<span class="token operator">=</span><span class="token string">&quot;og:title&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;title2&quot;</span> key<span class="token operator">=</span><span class="token string">&quot;title&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Head<span class="token operator">&gt;</span>
</code></pre></div><h4 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> Link</h4><p><code>Link</code> \u7EC4\u4EF6\u4F7F\u7528 JavaScript \u5B9E\u73B0\u7684 <code>\u5BA2\u6237\u7AEF\u5BFC\u822A</code>\uFF0C\u6BD4\u6D4F\u89C8\u5668\u7684\u9ED8\u8BA4\u5BFC\u822A\u66F4\u5FEB\uFF0C\u800C\u4E14\u4E0D\u4F1A\u91CD\u8F7D\u6574\u4E2A\u9875\u9762\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&#39;next/link&#39;</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/my/page&quot;</span><span class="token operator">&gt;</span>
    To My Page
<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
</code></pre></div><ul><li>href <code>string</code>: \u8DF3\u8F6C\u5730\u5740</li><li>prefetch (\u53EF\u9009) <code>boolean</code>: \u7528\u4E8E\u914D\u7F6E\u540E\u53F0\u9884\u52A0\u8F7D\u884C\u4E3A\uFF0C\u9ED8\u8BA4\u503C\u4E3A <code>true</code>\uFF0C\u53EA\u5728\u751F\u4EA7\u73AF\u5883\u6709\u6548\u3002 <ul><li>prefetch \u4E3A <code>true</code> \u65F6\uFF0C\u5F53 <code>Link</code> \u7EC4\u4EF6\u8FDB\u5165\u89C6\u7A97 (viewport) \u65F6\u4F1A\u8FDB\u884C\u9884\u52A0\u8F7D\u3002</li><li>prefetch \u4E3A <code>false</code> \u65F6\uFF0C\u5F53 <code>Link</code> \u7EC4\u4EF6\u5904\u4E8E <code>hover</code> \u72B6\u6001\u65F6\u4F1A\u8FDB\u884C\u9884\u52A0\u8F7D\u3002</li></ul></li><li>replace (\u53EF\u9009) <code>boolean</code> : \u8DEF\u7531\u8DF3\u8F6C\u662F\u5426\u91C7\u7528 <code>replace</code> \u65B9\u5F0F\uFF0C\u9ED8\u8BA4\u503C\u4E3A <code>false</code> (\u4F7F\u7528 <code>push</code> \u8FDB\u884C\u8DF3\u8F6C)\u3002</li></ul><h4 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> Image</h4><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&#39;next/image&#39;</span><span class="token punctuation">;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> 
    <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">144</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">144</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/images/profile.jpg<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><ul><li>src <code>string</code>: \u56FE\u7247\u8DEF\u5F84</li><li>height <code>number | string</code>: \u9AD8\u3002\u5728 <code>layout=&quot;fill&quot;</code> \u65F6\u53EF\u4E0D\u586B\u5199\u3002</li><li>width <code>number | string</code>: \u5BBD\u3002\u5728 <code>layout=&quot;fill&quot;</code> \u65F6\u53EF\u4E0D\u586B\u5199\u3002</li><li>layout (\u53EF\u9009) <code>&#39;fixed&#39; | &#39;intrinsic&#39; | &#39;responsive&#39; | &#39;fill&#39;</code>: \u5B9A\u4E49\u56FE\u7247\u5728\u89C6\u7A97\u5927\u5C0F\u6539\u53D8\u65F6\u7684\u884C\u4E3A\u3002 <ul><li>fixed: \u4E0D\u6539\u53D8\u56FE\u7247\u5C3A\u5BF8\uFF0C\u7C7B\u4F3C\u539F\u751F img \u6807\u7B7E\u3002</li><li>intrinsic: \u89C6\u7A97\u6BD4\u56FE\u7247\u5C0F\u65F6\uFF0C\u56FE\u7247\u5C3A\u5BF8\u7F29\u5C0F\uFF1B\u89C6\u7A97\u6BD4\u56FE\u7247\u5927\u65F6\uFF0C\u4FDD\u6301\u539F\u5C3A\u5BF8\u3002</li><li>responsive: \u89C6\u7A97\u6BD4\u56FE\u7247\u5C0F\u65F6\uFF0C\u56FE\u7247\u5C3A\u5BF8\u7F29\u5C0F\uFF1B\u89C6\u7A97\u6BD4\u56FE\u7247\u5927\u65F6\uFF0C\u5C3A\u5BF8\u6269\u5927\u3002</li><li>fill: \u56FE\u7247\u94FA\u6EE1\u7236\u5143\u7D20\uFF0C\u5C3A\u5BF8\u7531\u7236\u5143\u7D20\u51B3\u5B9A\u3002</li></ul></li><li>loader (\u53EF\u9009) <code>(src, width, quality) =&gt; string</code>: \u7528\u4E8E\u89E3\u6790 <code>src</code> \u7684\u51FD\u6570\uFF0C\u76F8\u5F53\u4E8E\u628A <code>src</code> \u5C5E\u6027\u7528 <code>loader</code> \u8FDB\u884C\u4E86\u4E00\u6B21\u66FF\u6362\u3002</li><li>quality (\u53EF\u9009) <code>number | string</code>: \u56FE\u7247\u8D28\u91CF\u3002\u53EF\u8BBE\u7F6E\u4E3A 1 ~ 100\uFF0C\u9ED8\u8BA4\u503C\u4E3A 75\u3002</li></ul><h3 id="\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> \u83B7\u53D6\u6570\u636E</h3><h4 id="getstaticprops-\u9759\u6001\u751F\u6210" tabindex="-1"><a class="header-anchor" href="#getstaticprops-\u9759\u6001\u751F\u6210" aria-hidden="true">#</a> getStaticProps (\u9759\u6001\u751F\u6210)</h4><p>\u5728\u9875\u9762\u6587\u4EF6\u4E2D <code>export</code> \u7684 <code>getStaticProps</code> \u51FD\u6570\uFF0C\u670D\u52A1\u7AEF\u8FD0\u884C\u3002</p><p>next \u4F1A\u5728<span style="color:#ee8888;">\u6BCF\u6B21\u6784\u5EFA</span>\u65F6\u8C03\u7528\u5B83\uFF0C\u7ED9 UI \u7EC4\u4EF6\u63D0\u4F9B Props\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStaticProps</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        params<span class="token punctuation">,</span>  <span class="token comment">// \u8DEF\u7531\u53C2\u6570\uFF0C\u82E5\u9875\u9762\u6587\u4EF6\u4E3A [id].js\uFF0Cparams \u7684\u503C\u5C06\u4F1A\u662F { id: ... }</span>
        locale<span class="token punctuation">,</span>  <span class="token comment">// \u8BED\u8A00\u8BBE\u7F6E</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> context<span class="token punctuation">;</span>

    <span class="token comment">// \u5F02\u6B65\u83B7\u53D6\u6570\u636E</span>
    <span class="token comment">// \u4E5F\u53EF\u4EE5\u4F7F\u7528 node \u73AF\u5883\u7684 API</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">// \u63D0\u4F9B\u7ED9 UI \u7EC4\u4EF6\u7684 props</span>
        <span class="token comment">// revalidate: 10,  // \u6BCF 10 \u79D2\u6700\u591A\u751F\u6210\u4E00\u6B21 html\uFF0C\u7528\u4E8E\u7F13\u5B58</span>
        <span class="token literal-property property">revalidate</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// \u7F13\u5B58\u6784\u5EFA\u65F6\u751F\u6210\u7684 html\uFF0C\u76F4\u5230\u4E0B\u6B21\u6784\u5EFA</span>
        <span class="token literal-property property">notFound</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token comment">// \u5982\u679C\u4E3A true \u4F1A\u8FD4\u56DE 404 \u9875\u9762</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getserversideprops-\u670D\u52A1\u7AEF\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#getserversideprops-\u670D\u52A1\u7AEF\u6E32\u67D3" aria-hidden="true">#</a> getServerSideProps (\u670D\u52A1\u7AEF\u6E32\u67D3)</h4><p>\u5728\u9875\u9762\u6587\u4EF6\u4E2D <code>export</code> \u7684 <code>getServerSideProps</code> \u51FD\u6570\uFF0C\u670D\u52A1\u7AEF\u8FD0\u884C\u3002</p><p>\u4E0D\u80FD\u4E0E <code>getStaticProps</code> \u4E00\u8D77\u4F7F\u7528\u3002</p><p>next \u4F1A\u5728<span style="color:#ee8888;">\u6BCF\u6B21\u8BF7\u6C42</span>\u65F6\u8C03\u7528\u5B83\uFF0C\u7ED9 UI \u7EC4\u4EF6\u63D0\u4F9B Props\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getServerSideProps</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        req<span class="token punctuation">,</span>  <span class="token comment">// \u7B49\u540C\u4E8E node httpServer req</span>
        res<span class="token punctuation">,</span>  <span class="token comment">// \u7B49\u540C\u4E8E node httpServer res</span>
        query<span class="token punctuation">,</span>  <span class="token comment">// \u9875\u9762 query \u53C2\u6570</span>
        params<span class="token punctuation">,</span>  <span class="token comment">// \u8DEF\u7531\u53C2\u6570\uFF0C\u82E5\u9875\u9762\u6587\u4EF6\u4E3A [id].js\uFF0Cparams \u7684\u503C\u5C06\u4F1A\u662F { id: ... }</span>
        locale<span class="token punctuation">,</span>  <span class="token comment">// \u8BED\u8A00\u8BBE\u7F6E</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> context<span class="token punctuation">;</span>

    <span class="token comment">// \u5F02\u6B65\u83B7\u53D6\u6570\u636E</span>
    <span class="token comment">// \u4E5F\u53EF\u4EE5\u4F7F\u7528 node \u73AF\u5883\u7684 API</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">// \u63D0\u4F9B\u7ED9 UI \u7EC4\u4EF6\u7684 props</span>
        <span class="token literal-property property">notFound</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token comment">// \u5982\u679C\u4E3A true \u4F1A\u8FD4\u56DE 404 \u9875\u9762</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,133);function p(o,e){return t}var u=a(s,[["render",p]]);export{u as default};
