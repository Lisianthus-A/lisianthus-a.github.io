import{r as p,o as t,a as o,b as n,d as e,F as c,e as s,c as l}from"./app.dd20dfb6.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const u={},r=n("h1",{id:"typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript","aria-hidden":"true"},"#"),s(" TypeScript")],-1),i=s("\u5927\u90E8\u5206\u53C2\u8003\u4E8E "),m={href:"https://ts.xcatliu.com/",target:"_blank",rel:"noopener noreferrer"},d=s("TypeScript \u5165\u95E8\u6559\u7A0B"),y=l(`<h2 id="\u57FA\u672C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">let</span> bool<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// \u5E03\u5C14\u503C</span>
<span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u6570\u503C</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u5B57\u7B26\u4E32</span>
<span class="token keyword">let</span> nul<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// null</span>
<span class="token keyword">const</span> udf<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>
<span class="token keyword">let</span> unUse<span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// void \u4E25\u683C\u6A21\u5F0F\u4E0B\u53EA\u80FD\u7528 undefined\uFF0C\u975E\u4E25\u683C\u6A21\u5F0F\u53EF\u4EE5\u662F undefined | null</span>
<span class="token keyword">const</span> unionType<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u8054\u5408\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B\u522B\u540D</span>
<span class="token keyword">type</span> <span class="token class-name">Str</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str2<span class="token operator">:</span> Str <span class="token operator">=</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u7B49\u4EF7\u4E8E str2: string</span>
</code></pre></div><h2 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    gender<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&quot;male&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;female&quot;</span><span class="token punctuation">;</span>   <span class="token comment">// \u53EF\u9009\u5C5E\u6027</span>
    <span class="token punctuation">[</span>prop<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>  <span class="token comment">// \u4EFB\u610F\u5C5E\u6027</span>
    <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  <span class="token comment">// \u53EA\u8BFB\u5C5E\u6027</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> tom<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u6570\u7EC4\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u7C7B\u578B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> arr1<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u6CDB\u578B</span>
<span class="token keyword">const</span> arr2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u6570\u7EC4\u63A5\u53E3  \u4E00\u822C\u7528\u4E8E\u7C7B\u6570\u7EC4\uFF0C\u5982 arguments</span>
<span class="token keyword">interface</span> <span class="token class-name">NumberArray</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    callee<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> args<span class="token operator">:</span> NumberArray <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">let</span> args2<span class="token operator">:</span> IArguments <span class="token operator">=</span> arguments<span class="token punctuation">;</span>  <span class="token comment">// TS \u5B9A\u4E49\u597D\u7684\u7C7B\u578B\uFF0C\u4E0E NumberArray \u63A5\u53E3\u5F62\u72B6\u76F8\u540C</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u51FD\u6570\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u7684\u7C7B\u578B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> foo3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token comment">// TS \u4E2D\u7684 =&gt; \u7528\u6765\u8868\u793A\u51FD\u6570\u7684\u5B9A\u4E49  (\u8F93\u5165) =&gt; \u8F93\u51FA</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo4</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u63A5\u53E3</span>
<span class="token keyword">interface</span> <span class="token class-name">IFoo</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token function-variable function">IFoo</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token comment">// \u51FD\u6570\u91CD\u8F7D</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// \u503C as \u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(param.length);  // \u62A5\u9519\uFF0C\u53EA\u80FD\u7528 string \u548C number \u7684\u516C\u5171\u5C5E\u6027</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>param <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6B63\u5E38\u7F16\u8BD1</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5143\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5143\u7EC4" aria-hidden="true">#</a> \u5143\u7EC4</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> tuple<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Days <span class="token punctuation">{</span> Sun<span class="token punctuation">,</span> Mon<span class="token punctuation">,</span> Tue<span class="token punctuation">,</span> Wed<span class="token punctuation">,</span> Thu<span class="token punctuation">,</span> Fri<span class="token punctuation">,</span> Sat <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7ECF\u8FC7\u7F16\u8BD1\u540E Days \u4E3A {&quot;0&quot;: &quot;Sun&quot;, &quot;1&quot;: &quot;Mon&quot;, &quot;2&quot;: &quot;Tue&quot;, ..., &quot;Sun&quot;: 0, &quot;Mon&quot;: 1, ...}</span>
</code></pre></div><h2 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IOption</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;male&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;female&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// \u516C\u6709  \u6240\u6709\u5C5E\u6027\u548C\u65B9\u6CD5\u9ED8\u8BA4\u516C\u6709</span>
    <span class="token keyword">private</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  <span class="token comment">// \u79C1\u6709  \u53EA\u80FD\u5728\u8BE5\u7C7B\u5185\u90E8\u8BBF\u95EE</span>
    <span class="token keyword">protected</span> gender<span class="token operator">:</span> <span class="token string">&#39;male&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;female&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u53D7\u4FDD\u62A4  \u4E0E private \u76F8\u4F3C\uFF0C\u4F46\u53EF\u4EE5\u88AB\u5B50\u7C7B\u8BBF\u95EE</span>
    <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  <span class="token comment">// \u53EA\u8BFB  \u53EA\u80FD\u51FA\u73B0\u5728\u5C5E\u6027\u58F0\u660E\u6216\u6784\u9020\u51FD\u6570\u4E2D</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>option<span class="token operator">:</span> IOption<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender <span class="token punctuation">}</span> <span class="token operator">=</span> option<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> gender<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Utils</span> <span class="token punctuation">{</span>  <span class="token comment">// \u62BD\u8C61\u7C7B\uFF0C\u4E0D\u5141\u8BB8\u5B9E\u4F8B\u5316</span>
    <span class="token keyword">abstract</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// \u62BD\u8C61\u65B9\u6CD5\uFF0C\u7531\u5B50\u7C7B\u5B9E\u73B0</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Util</span> <span class="token keyword">extends</span> <span class="token class-name">Utils</span> <span class="token punctuation">{</span>
    <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Hi&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">// \u9700\u8981\u7C7B\u5B9E\u73B0\u7684\u63A5\u53E3</span>
<span class="token keyword">interface</span> <span class="token class-name">Alarm</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Light</span> <span class="token punctuation">{</span>
    <span class="token function">lightOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token function">lightOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">LightableAlarm</span> <span class="token keyword">extends</span> <span class="token class-name">Alarm</span> <span class="token punctuation">{</span>  <span class="token comment">// \u63A5\u53E3\u7EE7\u627F</span>
    <span class="token function">lightOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token function">lightOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Door</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">SecurityDoor</span> <span class="token keyword">extends</span> <span class="token class-name">Door</span> <span class="token keyword">implements</span> <span class="token class-name">Alarm</span><span class="token punctuation">,</span> Light <span class="token punctuation">{</span>  <span class="token comment">// \u7C7B\u53EF\u5B9E\u73B0\u591A\u4E2A\u63A5\u53E3</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SecurityDoor alert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">lightOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">lightOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">CarDoor</span> <span class="token keyword">extends</span> <span class="token class-name">Door</span> <span class="token keyword">implements</span> <span class="token class-name">LightableAlarm</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;CarDoor alert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">lightOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">lightOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA\u7C7B\u7684\u65F6\u5019\uFF0C\u4F1A\u81EA\u52A8\u521B\u5EFA\u7C7B\u7684\u7C7B\u578B</span>
<span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7C7B Point \u4F1A\u521B\u5EFA\u4EE5\u4E0B\u63A5\u53E3</span>
<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4E0D\u4F1A\u5305\u542B\u9759\u6001\u5C5E\u6027\u3001\u65B9\u6CD5\u548C\u6784\u9020\u51FD\u6570</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// \u6CDB\u578B - \u5728\u5B9A\u4E49\u51FD\u6570\u3001\u63A5\u53E3\u6216\u7C7B\u7684\u65F6\u5019\uFF0C\u4E0D\u9884\u5148\u6307\u5B9A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u4F7F\u7528\u65F6\u518D\u6307\u5B9A\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">createArray</span><span class="token punctuation">(</span>length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53EF\u4EE5\u9884\u89C1\uFF0CcreateArray \u51FD\u6570\u8FD4\u56DE\u6570\u7EC4\u7684\u7C7B\u578B\u4E0E\u53C2\u6570 value \u76F8\u540C\uFF0C\u53EF\u4EE5\u7528\u6CDB\u578B\u6539\u5199\u4E3A\uFF1A</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CDB\u578B\u7EA6\u675F</span>
<span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">{</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7EA6\u675F\u6CDB\u578BT\u5FC5\u987B\u7B26\u5408 Lengthwise \u7684\u5F62\u72B6 (\u5373\u5305\u542B number \u7C7B\u578B\u7684 length \u5C5E\u6027)</span>
<span class="token comment">// \u6CDB\u578B\u4E4B\u95F4\u4E5F\u53EF\u4EE5\u4E92\u76F8\u7EA6\u675F &lt;T extends U, U&gt;  \u8FD9\u6837\u4FDD\u8BC1\u4E86 T \u7684\u5C5E\u6027\u96C6\u5305\u542B U \u7684\u6240\u6709\u5C5E\u6027</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">loggingIdentity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Lengwise<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> param<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u7EA7\u7C7B\u578B" aria-hidden="true">#</a> \u9AD8\u7EA7\u7C7B\u578B</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">// \u4EA4\u53C9\u7C7B\u578B\uFF0C\u7C7B\u578B\u5FC5\u987B\u7B26\u5408\u591A\u4E2A\u7C7B\u578B\u7684\u5F62\u72B6</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token operator">&amp;</span> <span class="token constant">B</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> objC<span class="token operator">:</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token keyword">const</span> objC<span class="token operator">:</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// error</span>

<span class="token comment">// \u8054\u5408\u7C7B\u578B\uFF0C\u7C7B\u578B\u9700\u8981\u7B26\u5408\u67D0\u4E2A\u7C7B\u578B\u7684\u5F62\u72B6</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ok</span>

<span class="token comment">// never \u7C7B\u578B\uFF0C\u7528\u6765\u8868\u793A\u4E0D\u4F1A\u8FD4\u56DE\u7684\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// do something</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// typeof \u53D6\u5F97\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// typeof T \u4E3A { a: number }</span>

<span class="token comment">// \u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26 keyof \u53D6\u5F97\u7C7B\u578B\u7684\u7D22\u5F15</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">I</span></span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">I</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">I</span> <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// error</span>

<span class="token comment">// Record \u5FEB\u901F\u521B\u5EFA\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B R1 \u7B49\u4EF7\u4E8E { [key: string]: any }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R1</span></span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u7C7B\u578B R2 \u7B49\u4EF7\u4E8E { a: number; b: number; }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R2</span></span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Partial \u5C06\u6240\u6709\u5C5E\u6027\u4FEE\u6539\u4E3A\u53EF\u9009</span>
<span class="token comment">// \u7C7B\u578B P \u7B49\u4EF7\u4E8E: { a?: number; b?: number; }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P</span></span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span><span class="token constant">I</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Readonly \u5C06\u6240\u6709\u5C5E\u6027\u4FEE\u6539\u4E3A\u53EF\u9009</span>
<span class="token comment">// \u7C7B\u578B R \u7B49\u4EF7\u4E8E: { readonly a: number; readonly b: number; }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R</span></span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span><span class="token constant">I</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Pick \u9009\u53D6\u591A\u7EC4\u5C5E\u6027\u751F\u6210\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B R \u7B49\u4EF7\u4E8E: { a: number; b: number; }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">I</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Exclude&lt;T, U&gt; \u4ECE T \u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9 U \u7684\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B E \u7B49\u4EF7\u4E8E &#39;b&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">E</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Extract&lt;T, U&gt; \u63D0\u53D6 T \u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9 U \u7684\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B E \u7B49\u4EF7\u4E8E &#39;a&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">E</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// NonNullable&lt;T&gt; \u4ECE T \u4E2D\u53BB\u9664 null \u548C undefined</span>
<span class="token comment">// \u7C7B\u578B N \u7B49\u4EF7\u4E8E number | string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">N</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// ReturnType&lt;T&gt; \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B P \u7B49\u4EF7\u4E8E number</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// InstanceType&lt;T&gt; \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7C7B\u578B\u7684\u5B9E\u4F8B\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B I \u7B49\u4EF7\u4E8E\u7C7B\u578B C</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">I</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// Omit&lt;T, U&gt; \u53BB\u6389 T \u4E2D\u5305\u542B U \u7684\u7C7B\u578B</span>
<span class="token comment">// \u7C7B\u578B O \u7B49\u4EF7\u4E8E { b: string; }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">O</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span>
</code></pre></div>`,20);function b(g,f){const a=p("ExternalLinkIcon");return t(),o(c,null,[r,n("blockquote",null,[n("p",null,[i,n("a",m,[d,e(a)])])]),y],64)}var v=k(u,[["render",b]]);export{v as default};
